dryRun: false

# Set enableIngress to true to use Kubernetes ingress to access Kubeflow.
# else, you need to use istio-ingressgateway service.
enableIngress: false
# kubeflowHost is the VirtualService host setting,
# it should be a FQDN formated string.
# - If you are using ingress, must set kubeflowHost to a valid domain name.
# - If you are using IP to access Kubeflow, set kubeflowHost to "*" and enableIngress to false.
kubeflowHost: "*"
# kubeflowSitePrefix only supports "/" currently
kubeflowSitePrefix: "/"
# Setup tlsCrt and tlsKey to support HTTPS access (base64 encoded).
tlsCrt: ""
tlsKey: ""

global:
  imageCredentials: ""
  useRegistryCredentials: false
  registry: quay.io
  username: someone
  password: sillyness
  email: someone@host.com

cert-manager:
  enabled: true
istio:
  enabled: true

# Set minio.enabled = true to use embeded single node MinIO test deployment.
minio:
  enabled: true
  kfpMinioImage: gcr.io/ml-pipeline/minio:RELEASE.2019-08-14T20-37-41Z-license-compliance
  # use kubeflow image pull secrets to pull images
  useKubeflowImagePullSecrets: false
  # set S3/minio service locations
  minioAK: minio
  minioSK: minio123
  minioHost: minio-service.kubeflow
  minioPort: "9000"
  minioS3Region: minio
  minioKFPBucket: mlpipeline

# Set dex.enabled = true to use embeded Dex deployment.
# If you are using your own Dex server, 
# you need to setup below clientID, clientSecret, defaultUserEmail
dex:
  enabled: true
  oidcRedirectURL: /login/oidc
  defaultUserEmail: user@example.com
  defaultUserProfile: kubeflow-user-example-com
  notebookAccessPipelineDesc: "Allow access pipeline"
  oidcAuthURL: /dex/auth
  oidcProvider: http://dex.auth.svc.cluster.local:5556/dex
  skipAuthURI: "/dex"
  useridClaim: email
  useridHeader: kubeflow-userid
  useridPrefix: "\"\""
  oidcScopes: "profile email groups"
  # clientID: a3ViZWZsb3ctb2lkYy1hdXRoc2VydmljZQ==
  # clientSecret: WlhoaGJYQnNaUzFoY0hBdGMyVmpjbVYw

# ----------------------------------------------------
# Images
# ----------------------------------------------------
admissionWebhookImage: public.ecr.aws/j1r0q0g6/notebooks/admission-webhook:v1.5.0
jupyterWebAppImage: public.ecr.aws/j1r0q0g6/notebooks/jupyter-web-app:v1.5.0
notebookControllerImage: public.ecr.aws/j1r0q0g6/notebooks/notebook-controller:v1.5.0
notebookImageScipy: public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-scipy:v1.5.0
notebookImagePytorch: public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-pytorch-full:v1.5.0
notebookImagePytorchCuda: public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-pytorch-cuda-full:v1.5.0
notebookImageTensorflow: public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-tensorflow-full:v1.5.0
notebookImageTensorflowCuda: public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-tensorflow-cuda-full:v1.5.0
notebookImageCodeserverPython: public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/codeserver-python:v1.5.0
notebookImageRstudioTidyverse: public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/rstudio-tidyverse:v1.5.0

oidcAuthServiceImage: gcr.io/arrikto/kubeflow/oidc-authservice:28c59ef
centralDashboardImage: public.ecr.aws/j1r0q0g6/notebooks/central-dashboard:v1.5.0
kfamAccessManagementImage: public.ecr.aws/j1r0q0g6/notebooks/access-management:v1.5.0
kfamProfileControllerImage: public.ecr.aws/j1r0q0g6/notebooks/profile-controller:v1.5.0
volumesWebAppImage: public.ecr.aws/j1r0q0g6/notebooks/volumes-web-app:v1.5.0

# kfpVersion is the version of Kubeflow Pipeline images
kfpVersion: "1.8.2"

kfpApiServerImageAndTag: gcr.io/ml-pipeline/api-server:1.8.2
# below images uses kfpVersion as version tag:
kfpVisualizationServerImage: gcr.io/ml-pipeline/visualization-server
kfpFrontendImage: gcr.io/ml-pipeline/frontend
kfpViewerCrdControllerImage: gcr.io/ml-pipeline/viewer-crd-controller
kfpScheduledWorkflowImage: gcr.io/ml-pipeline/scheduledworkflow
kfpPersistenceAgentImage: gcr.io/ml-pipeline/persistenceagent
kfpMetadataWriterImage: gcr.io/ml-pipeline/metadata-writer
kfpMetadataEnvoyImage: gcr.io/ml-pipeline/metadata-envoy
kfpCacheServerImage: gcr.io/ml-pipeline/cache-server

# pipeline images using unique tags:
kfpMlMetadataStoreServerImage: gcr.io/tfx-oss-public/ml_metadata_store_server:1.5.0
kfpCacheImage: gcr.io/google-containers/busybox:latest
kfpArgoExecImage: gcr.io/ml-pipeline/argoexec:v3.2.3-license-compliance
kfpArgoControllerImage: gcr.io/ml-pipeline/workflow-controller:v3.2.3-license-compliance
kfpMetaControllerImage: docker.io/metacontrollerio/metacontroller:v2.0.4
kfpMysqlImage: gcr.io/ml-pipeline/mysql:5.7
kfpPythonImage: python:3.7

# KServe
kfsVersion: "v0.7.0"
kfsAgentImage: kserve/agent
kfsAlibiExplainerImage: kserve/alibi-explainer
kfsAixExplainer: kserve/aix-explainer
kfsArtExplainer: kserve/art-explainer

kfsTensorflowImage: tensorflow/serving
kfsTensorflowImageVersion: "1.14.0"
kfsTensorflowImageGpuVersion: "1.14.0-gpu"

kfsOnnxImage: mcr.microsoft.com/onnxruntime/server
kfsOnnxImageVersion: "v1.0.0"

kfsSkLearnImage: kserve/sklearnserver
kfsSkLearnImageVersion: "v0.7.0"

kfsSeldonioImage: docker.io/seldonio/mlserver
kfsSeldonioImageVersion: "0.2.1"

kfsXgbserverImage: kserve/xgbserver
kfsXgbserverImageVersion: "v0.7.0"

kfsPytorchImage: kserve/pytorchserver
kfsPytorchImageVersion: "v0.7.0"
kfsPytorchImageGpuVersion: "v0.7.0-gpu"

kfsTorchServeImage: pytorch/torchserve-kfs
kfsTorchServeImageVersion: "0.4.1"
kfsTorchServeImageGpuVersion: "0.4.1-gpu"

kfsTritonImage: nvcr.io/nvidia/tritonserver
kfsTritonImageVersion: "21.09-py3"

kfsPmmlserverImage: kserve/pmmlserver
kfsPmmlserverImageVersion: "v0.7.0"

kfsLgbserverImage: kserve/lgbserver
kfsLgbserverImageVersion: "v0.7.0"

kfsPaddleserverImage: kserve/paddleserver
kfsPaddleserverImageVersion: "v0.7.0"

kfsStorageInitializerImage: kserve/storage-initializer
kfsControllerImage: kserve/kserve-controller
kfsKubeRbacProxyImage: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.0
kfsModelsWebAppImage: kserve/models-web-app

# Used by templates/cluster-local-gateway.yaml for knative istio confs.
knativeProxyvImage: docker.io/istio/proxyv2:1.9.6
# Configmap used by istio, for creating kfserving "cluster-local-gateway".
# You may use `kubectl -n istio-system get configmap` to confirm.
knativeIstioConfigmap: istio
# istio configuration "ISTIO_META_CLUSTER_ID" used by kfserving cluster-local-gateway.
# Default: Kubernetes
istioMetaClusterID: Kubernetes

# training operators
trainingOperatorImage: public.ecr.aws/j1r0q0g6/training/training-operator:174e8813666951ded505daf334a37f60fd50c18d

# Tensorboard
tensorboardControllerImage: public.ecr.aws/j1r0q0g6/notebooks/tensorboard-controller:v1.5.0
tensorboardWebAppImage: public.ecr.aws/j1r0q0g6/notebooks/tensorboards-web-app:v1.5.0
